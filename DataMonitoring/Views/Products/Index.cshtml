@using System.Net 
@using System.Net.Mail
@using System.Text
@inject IAuthorizationService AuthorizationService

@using DataMonitoring.Contants
@model IEnumerable<DataMonitoring.Models.Product>

@{
    ViewData["Title"] = "Index";
}
<div class="row">
    @foreach (var item in Model) {
    <div class="col-4">
        <div class="card" style="width: 18rem;">
            <div class="card-body">
                <h5 class="card-title">@item.Name</h5>
                <hr />
                <p class="card-text">Quantity : @item.Quantity</p>
                <p class="card-text">Price : @item.Price</p>
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-warning">Details</a>
          </div>
        </div>
    </div>
    }
</div>
<div class="d-flex">
	<div class="card flex-fill">
		<div class="card-header">
            <h5 class="card-title mb-0">Products</h5>
            <hr />
            <br />
            @if (AuthorizationService.AuthorizeAsync(User, Permissions.Products.Create).Result.Succeeded)
            {
             <p>
                    <a asp-action="Create" class="btn btn-outline-primary bi bi-plus-square"><span>   Add</span></a>
            </p>
            }
		</div>
        <input class="form-control" id="myInput" type="text" placeholder="Search..">
        <br>
        <table class="table table-hover my-0" >
            <thead>
                <tr>
                     <th>
                        @Html.DisplayNameFor(model => model.Name)
                     </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Category)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Quantity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Price)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="tableData">
        @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                            @if (item.Quantity < 10)
                            {
                                try
                                {
                                    SmtpClient client = new SmtpClient("smtp-mail.outlook.com");
                                    client.Port = 587;
                                    client.DeliveryMethod = SmtpDeliveryMethod.Network;
                                    client.UseDefaultCredentials = false;
                                    System.Net.NetworkCredential credential = new System.Net.NetworkCredential("testdev9@outlook.fr", "test2468");
                                    client.EnableSsl = true;
                                    client.Credentials = credential;
                                    MailMessage message = new MailMessage("testdev9@outlook.fr", "rachednaguez9@gmail.com");
                                    message.Subject = "Alert : ";
                                    message.Body = "Recharger le stock du produit : "+ item.Name;
                                    message.IsBodyHtml = true;
                                    client.Send(message);
                                }catch(Exception ex)
                                {
                                    throw;
                                }
                                @Html.DisplayFor(modelItem => item.Quantity)

                            }
                        else {
                        @Html.DisplayFor(modelItem => item.Quantity)}
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @if (AuthorizationService.AuthorizeAsync(User, Permissions.Customers.Create).Result.Succeeded) {
                                <a asp-action="Edit" asp-route-id="@item.Id"class="btn btn-outline-warning bi bi-pencil-square"></a>
                                   }
                            @if (AuthorizationService.AuthorizeAsync(User, Permissions.Customers.View).Result.Succeeded) {
                                <a asp-action="Details" asp-route-id="@item.Id"class="btn btn-outline-primary bi bi-list-stars"></a>
                                    }
                            @if (AuthorizationService.AuthorizeAsync(User, Permissions.Customers.Delete).Result.Succeeded) {
                                <a asp-action="Delete" asp-route-id="@item.Id"class="btn btn-outline-danger bi bi-trash3"></a>
                            }
                    </td>
                </tr>
                }
            </tbody>
</table>
</div>
</div>
@section Scripts {
<script>
    $(document).ready(function(){
  $("#myInput").on("keyup", function() {
    var value = $(this).val().toLowerCase();
    $("#tableData tr").filter(function() {
      $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
    });
  });
});
</script>}

